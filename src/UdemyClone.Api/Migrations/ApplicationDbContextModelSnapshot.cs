// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UdemyClone.Api.Data;

#nullable disable

namespace UdemyClone.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UdemyClone.Api.Domain.Ders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IcerikUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KursId")
                        .HasColumnType("int");

                    b.Property<int>("Sira")
                        .HasColumnType("int");

                    b.Property<int>("SureSaniye")
                        .HasColumnType("int");

                    b.Property<bool>("UcretsizMi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("KursId");

                    b.ToTable("Dersler", (string)null);
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.DersTamamlama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId", "LessonId")
                        .IsUnique();

                    b.ToTable("DersTamamlamalar", (string)null);
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ikon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UstKategoriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UstKategoriId");

                    b.ToTable("Kategoriler", (string)null);
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Fotograf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hakkinda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("KayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SifreHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SonGirisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Kullanicilar", (string)null);
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Kupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("KursId")
                        .HasColumnType("int");

                    b.Property<int?>("MaxUses")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TimesUsed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("InstructorId");

                    b.HasIndex("KursId");

                    b.ToTable("Kuponlar", (string)null);
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.KuponKurs", b =>
                {
                    b.Property<int>("KuponId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("KuponId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("KuponKurs", (string)null);
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Kurs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EgitmenId")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KapakResmi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int?>("KategoriId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Seviye")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TahminiSure")
                        .HasColumnType("int");

                    b.Property<string>("TanitimVideosu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("YayindaMi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EgitmenId");

                    b.HasIndex("KategoriId");

                    b.HasIndex("KategoriId1");

                    b.ToTable("Kurslar", (string)null);
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.KursKayit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnrolledAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId", "CourseId")
                        .IsUnique();

                    b.ToTable("KursKayitlari", (string)null);
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Mesaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GonderimTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SenderId");

                    b.ToTable("Mesajlar", (string)null);
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Yorum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Puan")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CourseId");

                    b.ToTable("Yorumlar", (string)null);
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Ders", b =>
                {
                    b.HasOne("UdemyClone.Api.Domain.Kurs", "Kurs")
                        .WithMany("Dersler")
                        .HasForeignKey("KursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kurs");
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.DersTamamlama", b =>
                {
                    b.HasOne("UdemyClone.Api.Domain.Ders", "Lesson")
                        .WithMany("Tamamlamalar")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UdemyClone.Api.Domain.Kullanici", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lesson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Kategori", b =>
                {
                    b.HasOne("UdemyClone.Api.Domain.Kategori", "UstKategori")
                        .WithMany("AltKategoriler")
                        .HasForeignKey("UstKategoriId");

                    b.Navigation("UstKategori");
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Kupon", b =>
                {
                    b.HasOne("UdemyClone.Api.Domain.Kullanici", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UdemyClone.Api.Domain.Kurs", null)
                        .WithMany("Kuponlar")
                        .HasForeignKey("KursId");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.KuponKurs", b =>
                {
                    b.HasOne("UdemyClone.Api.Domain.Kurs", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UdemyClone.Api.Domain.Kupon", "Kupon")
                        .WithMany("KuponKurslar")
                        .HasForeignKey("KuponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Kupon");
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Kurs", b =>
                {
                    b.HasOne("UdemyClone.Api.Domain.Kullanici", "Egitmen")
                        .WithMany("VerdigiKurslar")
                        .HasForeignKey("EgitmenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UdemyClone.Api.Domain.Kategori", "Kategori")
                        .WithMany()
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UdemyClone.Api.Domain.Kategori", null)
                        .WithMany("Kurslar")
                        .HasForeignKey("KategoriId1");

                    b.Navigation("Egitmen");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.KursKayit", b =>
                {
                    b.HasOne("UdemyClone.Api.Domain.Kurs", "Course")
                        .WithMany("Kayitlar")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UdemyClone.Api.Domain.Kullanici", "User")
                        .WithMany("KursKayitlari")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Mesaj", b =>
                {
                    b.HasOne("UdemyClone.Api.Domain.Kullanici", "Recipient")
                        .WithMany("AlinanMesajlar")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UdemyClone.Api.Domain.Kullanici", "Sender")
                        .WithMany("GonderilenMesajlar")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Recipient");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Yorum", b =>
                {
                    b.HasOne("UdemyClone.Api.Domain.Kullanici", "Author")
                        .WithMany("Yorumlar")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UdemyClone.Api.Domain.Kurs", "Course")
                        .WithMany("Yorumlar")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Ders", b =>
                {
                    b.Navigation("Tamamlamalar");
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Kategori", b =>
                {
                    b.Navigation("AltKategoriler");

                    b.Navigation("Kurslar");
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Kullanici", b =>
                {
                    b.Navigation("AlinanMesajlar");

                    b.Navigation("GonderilenMesajlar");

                    b.Navigation("KursKayitlari");

                    b.Navigation("VerdigiKurslar");

                    b.Navigation("Yorumlar");
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Kupon", b =>
                {
                    b.Navigation("KuponKurslar");
                });

            modelBuilder.Entity("UdemyClone.Api.Domain.Kurs", b =>
                {
                    b.Navigation("Dersler");

                    b.Navigation("Kayitlar");

                    b.Navigation("Kuponlar");

                    b.Navigation("Yorumlar");
                });
#pragma warning restore 612, 618
        }
    }
}
